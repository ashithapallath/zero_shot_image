# -*- coding: utf-8 -*-
"""new_model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uh2j9Pz-0JGhUJFTcvW9tMOQrO92RSXs
"""

!pip install autogluon.multimodal

!pip install torchaudio

import cv2
import os
from IPython.display import Image, display
from autogluon.multimodal import download, MultiModalPredictor


def capture_frames(video_path, output_folder='frames'):
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    vidObj = cv2.VideoCapture(video_path)
    count = 0
    frame_interval = 1
    fps = int(vidObj.get(cv2.CAP_PROP_FPS))
    frame_time = 1 / fps

    frame_urls = []

    while True:
        success, image = vidObj.read()

        if not success:
            break

        current_time = vidObj.get(cv2.CAP_PROP_POS_MSEC) / 1000.0

        if current_time >= count * frame_interval:
            frame_name = os.path.join(output_folder, "frame%d.jpg" % count)
            cv2.imwrite(frame_name, image)
            frame_urls.append(frame_name)
            count += 1

    vidObj.release()

    return frame_urls

if __name__ == '__main__':
    video_path = "t_w023_converted.avi"
    output_folder = "frames"

    frame_urls = capture_frames(video_path, output_folder)

    predictor = MultiModalPredictor(problem_type="zero_shot_image_classification")

    class_labels = [
        'Violence',
        'Normal'
    ]

    for frame_url in frame_urls:
        pil_img = Image(filename=frame_url)
        display(pil_img)

        prob = predictor.predict_proba({"image": [frame_url]}, {"text": class_labels})
        print(f"Frame probabilities for {frame_url}:", prob)

        violence_prob = prob[0][0]

        if violence_prob > 0.5:
            print("Violence detected in this frame!")
            score = 1


if score == 1:
    print("Violence detected")